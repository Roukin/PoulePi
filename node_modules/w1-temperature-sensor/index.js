var execSync = require('child_process').execSync;
var async = require('async');



function W1TemperatureSensor(array){
    this.sensors = array;
}



W1TemperatureSensor.prototype.getCurrent = function(callback){
    var sensors = this.sensors;
    async.map(sensors, gettemp, function(err, results){
        // results is now an array of temp for each sensor 
        console.log("callback async.Map appele"+JSON.stringify(results));
        if (err)
            console.log(err);
        else{
            var resultobj = {};

            for(i=0; i<results.length; i++) {
                resultobj[results[i].name] = results[i].value;
             }
             resultobj.date = new Date();
            callback(resultobj);
        }
    });

}


function gettemp(sensor, callback){
    var sensorid = sensor.id;
    var sensorname = sensor.name;
    console.log('gettemp appele'+sensorid+sensorname);
    var stdout = execSync( "cat /sys/bus/w1/devices/" + sensorid + "/w1_slave | grep t= | cut -f2 -d= | awk '{print $1/1000}'");
    var temp = parseFloat(stdout).toFixed(2);
    if (temp == "NaN") {
        stdout = execSync( "cat /sys/bus/w1/devices/" + sensorid + "/w1_slave | grep t= | cut -f2 -d= | awk '{print $1/1000}'");
        temp = parseFloat(stdout).toFixed(2);
    }

    if (temp == "NaN") temp=-40
    console.log( "temperature "+sensorid+" lue: " + temp);
    callback(null,{name:sensorname,value:temp});
     
}


 module.exports = W1TemperatureSensor;